(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{43:function(t,e,a){"use strict";a.r(e),a.d(e,"getInputPasswordSRP",(function(){return c}));var s=a(40),n=a(41);async function c(t,e){return await async function(t,e){const{srp_B:a,srp_id:r}=e,{p:b,salt1:i,salt2:o}=e.current_algo,w=new Uint8Array([e.current_algo.g]),y=Object(s.bigBytesInt)(b),j=Object(s.bigBytesInt)(a),u=Object(s.bigint)(0),O=new Uint8Array(256);O.set(w),O.reverse();const h=new Uint8Array(Object(s.bufferRandom)(256)),d=Object(s.bigBytesInt)(h),f=await Object(s.bytesPowMod)(w,h,b),[l,p,B]=await Promise.all([c((new TextEncoder).encode(t),i,o),Object(n.sha256Hash)(Object(s.bufferConcat)(f,a)),Object(n.sha256Hash)(Object(s.bufferConcat)(b,O))]),g=await Object(s.bytesPowMod)(w,l,b),m=Object(s.bigBytesInt)(B).multiply(Object(s.bigBytesInt)(g)).mod(y);let H=j.subtract(m).mod(y);H.compareTo(u)<0&&(H=H.add(y));const P=d.add(Object(s.bigBytesInt)(p).multiply(Object(s.bigBytesInt)(l))).toByteArray(),A=await Object(s.bytesPowMod)(H.toByteArray(),P,b),I=new Uint8Array(256);I.set(A);const[_,v,C,M,U]=await Promise.all([Object(n.sha256Hash)(I),Object(n.sha256Hash)(b),Object(n.sha256Hash)(O),Object(n.sha256Hash)(i),Object(n.sha256Hash)(o)]),K=await Object(n.sha256Hash)(Object(s.bufferConcat)(Object(s.bytesXor)(v,C),M,U,f,a,_));return{srp_id:r,A:f,M1:K}}(t,e);async function a(t,e){return await Object(n.sha256Hash)(Object(s.bufferConcat)(e,t,e))}async function c(t,e,s){const n=await a(await a(t,e),s),c=await crypto.subtle.importKey("raw",n,"PBKDF2",!1,["deriveBits"]);return a(await crypto.subtle.deriveBits({name:"PBKDF2",hash:"SHA-512",salt:e,iterations:1e5},c,512),s)}}}}]);