(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{39:function(e,t,s){"use strict";s.r(t);var i=s(0),n=s(16);function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const a=262144,o=1048576;class u{constructor(e){r(this,"bufferQueue",[]),r(this,"ended",!1),r(this,"onUpdateEnd",()=>{const e=this.bufferQueue.shift();e?this.appendBuffer(e):this.ended&&this.ms.endOfStream()}),r(this,"onTimeUpdate",()=>{this.resumeLoader&&this.checkLowBuffer()&&this.resumeLoader()}),this.doc=e;const t=new MediaSource;t.addEventListener("sourceopen",()=>{this.sourceBuffer=t.addSourceBuffer("audio/mpeg"),this.sourceBuffer.addEventListener("updateend",this.onUpdateEnd)}),this.ms=t;const s=document.createElement("audio");s.addEventListener("timeupdate",this.onTimeUpdate),s.src=URL.createObjectURL(this.ms),this.audio=s,this.load()}load(){const e=new h({onSegmentReady:e=>{this.appendBuffer(e)},onDurationChange:e=>{this.ms.duration=e}}),t=async(s,i)=>{if(s>=this.doc.size)return void this.endStream();const r=i<5?a:o,u=await n.a.loadDocumentBytes(this.doc,s,r);e.append(u);const h=s+u.length;this.checkLowBuffer()?t(h,i+1):this.resumeLoader=()=>{t(h,i+1),this.resumeLoader=null}};t(0,0)}checkLowBuffer(){const e=this.audio,t=e.buffered;return!t.length||t.end(0)<e.currentTime+180}appendBuffer(e){if(this.sourceBuffer.updating)this.bufferQueue.push(e);else try{this.sourceBuffer.appendBuffer(e)}catch(t){if("QuotaExceededError"!==t.name)throw t;this.bufferQueue.unshift(e);const s=this.audio.buffered.start(0);this.sourceBuffer.remove(s,s+30)}}endStream(){this.ended=!0,this.sourceBuffer.updating||this.bufferQueue.length||this.ms.endOfStream()}}class h{constructor({onSegmentReady:e,onDurationChange:t}){r(this,"ID3_HEADER_SIZE",10),r(this,"FRAME_HEADER_SIZE",4),r(this,"XING_HEADER_OFFSET",32),r(this,"haveMeta",!1),this.onSegmentReady=e,this.onDurationChange=t}append(e){if(this.prevBytes){const t=this.prevBytes,s=e;(e=new Uint8Array(t.length+s.length)).set(t),e.set(s,t.length),this.prevBytes=null}let t=0;for(;t<e.length;){const s=this.parseFrame(e,t);if(!s)break;t=s}if(this.prevBytes=e.slice(t),t){const s=e.slice(0,t);this.onSegmentReady(s)}}parseFrame(e,t){let s=t;const i=!this.haveMeta;if(i){if(s=this.ID3_HEADER_SIZE+this.getID3Size(e.subarray(6,10)),e.length<s)return 0;this.haveMeta=!0}if(e.length-s<4)return 0;const n=e.subarray(s,s+this.FRAME_HEADER_SIZE);if(255!=(255&n[0])&&15!=(15&n[1]))return console.log("end of mp3"),0;const r=(24&n[1])>>>3,a=(6&n[1])>>>1,o=(240&n[2])>>>4,u=(12&n[2])>>>2,h=(2&n[2])>>>1,c=d.bitrate[r][a][o],f=d.samplerate[r][u],l=Math.floor(1e3*c/f*144)+(h?d.slot[a]:0);if(i){const t=s+this.FRAME_HEADER_SIZE+this.XING_HEADER_OFFSET,i=e.slice(t,t+16),n=(new TextDecoder).decode(i.slice(0,4));if("Info"===n||"Xing"===n){const e=new DataView(i.buffer);if(1&e.getInt32(4)){const t=e.getInt32(8)*d.samplePerFrame[r][a]/f;this.onDurationChange&&this.onDurationChange(t)}}}return e.length-s<l?0:s+l}getID3Size(e){return(127&e[0])<<21|(127&e[1])<<14|(127&e[2])<<7|127&e[3]}}const d={frame:{0:"MPEG 2.5",1:"Reserved",2:"MPEG 2",3:"MPEG 1"},layer:{0:"reserved",1:"Layer III",2:"Layer II",3:"Layer I"},bitrate:{3:{1:[0,32,40,48,56,64,80,96,112,128,160,192,224,256,320,-1],2:[0,32,48,56,64,80,96,112,128,160,192,224,256,320,384,-1],3:[0,32,64,96,128,160,192,224,256,288,320,352,384,416,488,-1]},2:{3:[0,32,48,56,64,80,96,112,128,144,160,176,192,224,256,-1],2:[0,8,16,24,32,40,48,56,64,80,96,112,128,144,160,-1],1:[0,8,16,24,32,40,48,56,64,80,96,112,128,144,160,-1]},0:{3:[0,32,48,56,64,80,96,112,128,144,160,176,192,224,256,-1],2:[0,8,16,24,32,40,48,56,64,80,96,112,128,144,160,-1],1:[0,8,16,24,32,40,48,56,64,80,96,112,128,144,160,-1]}},samplerate:{3:[44100,48e3,32e3,-1],2:[22050,24e3,16e3,-1],0:[11025,12e3,8e3]},channel:["Stereo","Joint Stereo","Dual Channel","Single Channel"],slot:{3:4,2:1,1:1},samplePerFrame:{3:{3:384,2:1152,1:1152},2:{3:384,2:1152,1:576},0:{3:384,2:1152,1:576}}};s.d(t,"AudioPlayer",(function(){return c}));class c{constructor(e){var t,s,i;i=[],(s="listeners")in(t=this)?Object.defineProperty(t,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[s]=i,this.doc=e}initStreaming(){const e=new u(this.doc);this.audio=e.audio}initSrc(e){const t=document.createElement("audio");"audio/ogg"!==this.doc.mime_type||t.canPlayType("audio/ogg")?(this.audio=t,t.src=e):this.audioPromise=this.initOGVPlayer(this.doc,e)}async initOGVPlayer(e,t){window.OGVPlayer||await Object(i.C)("./vendor/ogvjs/ogv.js");const{OGVPlayer:s,OGVLoader:n}=window;n.base="vendor/ogvjs";const r=new s;return r.type=this.doc.mime_type,r.src=t,console.log("playing audio with ogv.js",r,this.doc),this.audio=r,r}async listen(e,t){(await this.getAudio()).addEventListener(e,t),this.listeners.push([e,t])}getAudio(){return this.audio?Promise.resolve(this.audio):this.audioPromise}async play(){(await this.getAudio()).play()}async pause(){(await this.getAudio()).pause()}async togglePlay(){const e=await this.getAudio();e.paused?e.play():e.pause()}async destroy(){const e=await this.getAudio();e.pause();for(const{eventType:t,listener:s}of this.listeners)e.removeEventListener(t,s);this.audio=null,this.listeners=[]}}}}]);